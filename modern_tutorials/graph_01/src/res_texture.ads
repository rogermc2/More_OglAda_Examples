--  GIMP RGBA C-Source image dump (res_texture.c)

with GL.Types; use GL.Types; 

package Res_Texture is

      Rows     : constant Int := 15;
      Columns  : constant Int := 15;
--     type UByte_Array is array (Int range <>) of UByte;
   type Pixel_Data is new UInt_Array (1 .. Rows * Columns * 4 + 1);
   type Texture_Data is record
      Width           : Int := Rows;
      Height          : Int := Columns;
      Bytes_Per_Pixel : Int := 3;   -- 3:RGB, 4:RGBA
      Pixels          : Pixel_Data :=
       (
      377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377,
      377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0,
      377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0,
      0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0,
      377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377,
      377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0,
      377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0,
      0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0,
      377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0,
      377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377,
      0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 377, 377, 377,
      377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377,
      377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
      377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
      377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
      377, 377, 377, 377, 377, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377,
      0, 0, 0, 377, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0,
      377, 0, 0, 0, 377, 0, 0, 0, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 2, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377,
      377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377,
      377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377,
      377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377,
      377, 377, 377, 0, 0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0,
      0, 0, 377, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0, 377, 377, 377, 0, 377, 377, 377, 0, 0, 0, 0, 377, 377, 377, 377, 377, 0, 0, 0, 377, 377, 377,
      377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377, 0, 377, 377, 377,
      0);
   end record;
   
   Resource_Texture : Texture_Data;  
   
end Res_Texture;

