
with GL.Types; use GL.Types;

package Cube_Data is

    --  The vertices. Three consecutive floats give a 3D vertex;
    --  Three consecutive vertices give a triangle.
    --  A cube has 6 faces with 2 triangles each,
    --  so this makes 6*2 = 12 triangles and 12*3 = 36 vertices
    Vertex_Data : Singles.Vector3_Array (1 .. 36) :=
                    ((0.5, 0.5, 0.5),  -- triangle 1 : begin
                     (0.5, 0.5, 1.0),
                     (0.5, 1.0, 1.0),    -- triangle 1 : end
                     (1.0, 1.0, 0.5),    -- triangle 2 : begin
                     (0.5, 0.5, 0.5),
                     (0.5, 1.0, 0.5),   -- triangle 2 : end

                     (1.0, 0.5, 1.0),
                     (0.5, 0.5, 0.5),
                     (1.0, 0.5, 0.5),
                     (1.0, 1.0, 0.5),
                     (1.0, 0.5, 0.5),
                     (0.5, 0.5, 0.5),

                     (0.5, 0.5, 0.5),
                     (0.5, 1.0, 1.0),
                     (0.5, 1.0, 0.5),
                     (1.0, 0.5, 1.0),
                     (0.5, 0.5, 1.0),
                     (0.5, 0.5, 0.5),

                     (0.5, 1.0, 1.0),
                     (0.5, 0.5, 1.0),
                     (1.0, 0.5, 1.0),
                     (1.0, 1.0, 1.0),
                     (1.0, 0.5, 0.5),
                     (1.0, 1.0, 0.5),

                     (1.0, 0.5, 0.5),
                     (1.0, 1.0, 1.0),
                     (1.0, 0.5, 1.0),
                     (1.0, 1.0, 1.0),
                     (1.0, 1.0, 0.5),
                     (0.5, 1.0, 0.5),

                     (1.0, 1.0, 1.0),
                     (0.5, 1.0, 0.5),
                     (0.5, 1.0, 1.0),
                     (1.0, 1.0, 1.0),
                     (0.5, 1.0, 1.0),
                     (1.0, 0.5, 1.0));

    --  One colour for each vertex.
    Colour_Data : Singles.Vector3_Array (1 .. 36) :=
                    ((0.0,  0.5,  0.0),
                     (0.0,  0.5,  0.0),
                     (0.0,  0.5,  0.0),
                     (0.0,  0.5,  0.0),
                     (0.0,  0.5,  0.0),
                     (0.0,  0.5,  0.0),

                     (1.0,  0.5,  0.0),
                     (1.0,  0.5,  0.0),
                     (1.0,  0.5,  0.0),
                     (1.0,  0.5,  0.0),
                     (1.0,  0.5,  0.0),
                     (1.0,  0.5,  0.0),

                     (1.0,  0.0,  0.0),
                     (1.0,  0.0,  0.0),
                     (1.0,  0.0,  0.0),
                     (1.0,  0.0,  0.0),
                     (1.0,  0.0,  0.0),
                     (1.0,  0.0,  0.0),

                     (1.0,  1.0,  0.0),
                     (1.0,  1.0,  0.0),
                     (1.0,  1.0,  0.0),
                     (1.0,  1.0,  0.0),
                     (1.0,  1.0,  0.0),
                     (1.0,  1.0,  0.0),

                     (0.0,  0.0,  1.0),
                     (0.0,  0.0,  1.0),
                     (0.0,  0.0,  1.0),
                     (0.0,  0.0,  1.0),
                     (0.0,  0.0,  1.0),
                     (0.0,  0.0,  1.0),

                     (1.0,  0.0,  1.0),
                     (1.0,  0.0,  1.0),
                     (1.0,  0.0,  1.0),
                     (1.0,  0.0,  1.0),
                     (1.0,  0.0,  1.0),
                     (1.0,  0.0,  1.0));

end Cube_Data;
